const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');

const app = express();

app.use(bodyParser.urlencoded({extended: false}));
app.use(bodyParser.json());
app.use(cors());

app.get('/', (req, res) => res.send('Server Work'));
app.use('/api/pdf', require('./pdf'));

const port = process.env.PORT || 4000;

app.listen(port, () => console.log(`Server running on port ${port}`)); 

chai.use(function (chai, utils) {
  // Checks whether the stream contains the given number of elements
  chai.Assertion.addMethod('streamWithLength', function (expectedLength, callback) {
    let stream = utils.flag(this, 'object'), length = 0, self = this;
    stream.on('data', function () { length++; });
    stream.on('end', function () {
      self.assert(length === expectedLength,
        'expected #{this} to be a stream of length ' + expectedLength + ', was ' + length,
        'expected #{this} not to be a stream of length ' + expectedLength);
      callback();
    });
